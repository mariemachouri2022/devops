pipeline {
    agent any

    tools {
        jdk 'JAVA_HOME'     // Nom de ton JDK configur√© dans Jenkins
        maven 'M2_HOME'     // Nom de Maven configur√© dans Jenkins
    }

    environment {
        // D√©finit le nom du serveur SonarQube que tu as configur√© dans Jenkins
        SONARQUBE_SERVER = 'SonarQube'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì¶ Clonage du d√©p√¥t...'
                git branch: 'main', url: 'https://github.com/mariemachouri2022/devops.git'
            }
        }

        stage('Build') {
            steps {
                echo '‚öôÔ∏è Compilation du projet...'
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Ex√©cution des tests...'
                sh 'mvn test'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'üîç Analyse SonarQube...'
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh 'mvn sonar:sonar'
                }
            }
        }

        stage("Quality Gate") {
            steps {
                // Attente du r√©sultat du Quality Gate
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline termin√©e avec succ√®s !'
        }
        failure {
            echo '‚ùå √âchec du pipeline !'
        }
    }
}